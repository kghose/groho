@startuml Sequence

actor User
boundary Scenario
control "Simulator" as sim
control Drafter
participant Chart
boundary "View" as plotf
actor "User" as u2

' Inital run

activate Scenario
activate plotf
plotf ->> Drafter: update(viewfile)
deactivate plotf
Drafter -> sim: load_data()
Drafter <-- sim: < no data >


Scenario ->> sim: restart(scenario)
deactivate Scenario
activate sim


Drafter -> Drafter: poll
activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: data
Drafter -> Chart: plot(data)
deactivate Drafter


Drafter -> Drafter: poll
activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: data
Drafter -> Chart: plot(data)
deactivate Drafter


' Restart after scenario edit

activate User
User -> Scenario: edit
deactivate User
activate Scenario

Scenario -> sim: stop
deactivate sim
Scenario -> sim: restart(scenario)
deactivate Scenario
activate sim

' User edits plot file

activate u2
u2 -> plotf: edit
deactivate u2

activate plotf
Drafter <- plotf: update(viewfile)
deactivate plotf
activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: data
Drafter -> Chart: plot(data)
deactivate Drafter


' User edits scenario, plotter tries to plot at the same time
activate User
User -> Scenario: edit
deactivate User
activate Scenario
Scenario -> sim: stop
deactivate sim

' Drafter poll returns no data
Drafter -> Drafter: poll
activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: < no data >
deactivate Drafter


Scenario -> sim: restart(scenario)
deactivate Scenario
activate sim

Drafter -> Drafter: poll
activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: data
Drafter -> Chart: plot(data)
deactivate Drafter


sim -> sim: done
deactivate sim

Drafter -> Drafter: poll
activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: data
Drafter -> Chart: plot(data)
deactivate Drafter


' User edits plot file again
activate u2
u2 -> plotf: edit
deactivate u2
activate plotf
Drafter <- plotf: update(viewfile)
deactivate plotf

activate Drafter
Drafter -> sim: load_data()
Drafter <-- sim: data
Drafter -> Chart: plot(data)
deactivate Drafter

@enduml