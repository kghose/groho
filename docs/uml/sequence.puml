@startuml Sequence

actor User
participant "Scenario file" as scnf
participant Simulator
participant Simulation
participant "Simulation file" as simf
participant "Plotting file" as plotf
participant Plotter
collections Plot

Simulator -> scnf: load_scenario()
scnf --> Simulator: scenario
Simulator -> Simulation: restart(scenario)
activate Simulation

Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: data
Plotter -> Plot: plot(data)

Simulation -> simf: save(data)

Simulator -> scnf: load_scenario()
scnf --> Simulator: scenario
Simulator -> Simulation: stop
deactivate Simulation
Simulator -> Simulation: restart(scenario)
activate Simulation


User -> scnf: edit


Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: data
Plotter -> Plot: plot(data)

Simulation -> simf: save(data)

User -> plotf: edit
Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: data
Plotter -> Plot: plot(data)


Simulator -> scnf: load_scenario()
scnf --> Simulator: scenario
Simulator -> Simulation: stop
deactivate Simulation
Simulation -> simf: save(data)


Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: <no data>


Simulator -> Simulation: restart(scenario)
activate Simulation


Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: data
Plotter -> Plot: plot(data)

Simulator -> Simulation: done
deactivate Simulation
Simulation -> simf: save(data)

Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: data
Plotter -> Plot: plot(data)



User --> plotf: edit

Plotter -> plotf: load_plotfile()
Plotter <-- plotf: plotfile
Plotter -> Simulation: load_data()
Plotter <-- Simulation: data
Plotter -> Plot: plot(data)

@enduml